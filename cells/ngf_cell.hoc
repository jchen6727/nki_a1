begintemplate ngfcell

public init, connect_sections, append_sections
public soma
public dend
public all, basal_list, apical_list, dendrite_list, soma_list
public mechinit, insert_mechs, set_chanparams

// create the sections[segments]
//create soma[1]
create soma
create dend[16]


proc init() {
	connect_sections()
	append_sections()
	mechinit()
	insert_mechs()
	set_chanparams()
}


proc connect_sections() { local i
 	connect dend[0](0), soma(1)
	for i=0,3 {
		connect dend[i+1](0), dend[i](1)
	}

  	connect dend[5](0), soma(1)
	for i=5,8 {
		connect dend[i+1](0), dend[i](1)
	}
	
  	connect dend[10](0), soma(0)
	for i=10,11 {
		connect dend[i+1](0), dend[i](1)
	}

  	connect dend[13](0), soma(0)
	for i=13,14 {
		connect dend[i+1](0), dend[i](1)
	}
}

objref all, basal_list, apical_list, dendrite_list, soma_list, axon_list
proc append_sections() { local i
	objref all, basal_list, apical_list, dendrite_list, soma_list, axon_list

	all = new SectionList()
	basal_list = new SectionList()
	apical_list = new SectionList()
	soma_list = new SectionList()
	axon_list = new SectionList()
	dendrite_list = new SectionList()

	soma all.append()
	soma soma_list.append()
	for i=0,15 {
		dend[i] all.append()
		dend[i] dendrite_list.append()
	}

	for i=0,9 {
		dend[i] apical_list.append()
	}

	for i=10,15 {
		dend[i] basal_list.append()
	}
}

proc mechinit() {

	// resting membrane potential. Must lie between Na+ and K+ reversal potentials
	Vrest=-65
	
	// Temperature of simulation
	celsius = 34.0  

	// Membrane resistance in ohm*cm2
	RmDend = 5555 //1/0.00018 
	RmSoma = 5555 //1/0.00018 

	// Membrane capacitance in uF/cm2
	CmSoma= 1.4
	CmDend = 1.4

	// Axial resistance in ohm*cm
	RaDend= 100
	RaSoma= 100	
	
	// Calcium concentrations in mM
	ca_outside = 2
	ca_inside = 5.e-6 // 50.e-6
	catau = 10

	// reversal potentials in mV
	ekval = -90	
	enaval = 55
	eHCNval = -30
	ecaval = 8.314*(273.15+celsius)/(2*9.649e4)*log(ca_outside/ca_inside)*1000 // about 170, otherwise set to 130
	
	if (Vrest<ekval) Vrest=ekval // Cell cannot rest lower than K+ reversal potential
	if (Vrest>enaval) Vrest=enaval // Cell cannot rest higher than Na+ reversal potential
	eleakval = Vrest

	// max ion channel conductances in mho/cm2
	gNav     = 0.15 // soma: // 0.12 //original 0.030 to .055 ; lm: //0.5  	//original 0.015
	gKdr     = 0.013    // Delayed rectifier potassium
	gKvA 	 = 0.00015 // Proximal A-type potassium
	gHCN     = 0.00002 // HCN (hyperpolarization-activated cyclic nucleotide-gated channel)
	gCavN    = 0.0008 //   T-type calcium
	gCavL    = 0.005 //  L-type calcium
	gKvCaB	 = 0.0000002 // Big potassium channel: voltage and calcium gated 
	gKCaS	 = 0.000002 //  Small potassium channel: calcium gated		

	gNasoma=20000//3.7860265 // SOMETHING IS VERY ODD HERE 
	gNadend=0.25918894  
	gKvA=5.2203905e-06
	kdrf=0.15514516
	kdrfdend = 0.0021817289
	gleak=8.470825e-05
	gCavL=0.056108352
	gCavN=0.00058169587
	gKvCaB=1.0235317e-06 
	gKCaS=4.5152237e-07  
	myRa = 14 //75
	CM = 1.8 //1.8
	offset1=20
	offset2=20
	offset3=13.5816 
	offset4=13.35371
	slope1=0.68266
	slope2=0.56966
	slope3=1.18592
	slope4=49.4896
	offset5=9
	offset6=9
	slope5=.07
	slope6=.264
}

proc insert_mechs() {

	forsec all {
		insert iconc_Ca
			catau_iconc_Ca = 10
			caiinf_iconc_Ca = 5.e-6
		insert ch_KvAngf
			gmax_ch_KvAngf = gKvA
		insert ch_CavN  // HAV-N- Ca channel
			gmax_ch_CavN =   gCavN
		insert ch_CavL 
			gmax_ch_CavL=gCavL
		insert ch_KCaS
			gmax_ch_KCaS=gKCaS
		insert ch_KvCaB
			gmax_ch_KvCaB =gKvCaB
		cm=CM
	} 

	soma {
		insert ch_Navngf
		gmax_ch_Navngf=gNasoma //0.10*gna_scale
		offset1_ch_Navngf=offset1
		offset2_ch_Navngf=offset2
		offset3_ch_Navngf=offset3
		offset4_ch_Navngf=offset4
		slope1_ch_Navngf=slope1
		slope2_ch_Navngf=slope2
		slope3_ch_Navngf=slope3
		slope4_ch_Navngf=slope4
		ena = 55 
		
		insert ch_Kdrfastngf
		gmax_ch_Kdrfastngf=kdrf 
		offset5_ch_Kdrfastngf=offset5 
		offset6_ch_Kdrfastngf=offset6 
		slope6_ch_Kdrfastngf=slope6 
		slope5_ch_Kdrfastngf=slope5	
	
		insert ch_leak
		gmax_ch_leak = gleak
	} 

	access soma
	distance()
	
	forsec dendrite_list {
		for (x,0) {
			if (distance(x)<100) {
			insert ch_Navngf
			gmax_ch_Navngf=gNadend //0.08*gna_scale
			offset1_ch_Navngf=offset1
			offset2_ch_Navngf=offset2
			offset3_ch_Navngf=offset3
			offset4_ch_Navngf=offset4
			slope1_ch_Navngf=slope1
			slope2_ch_Navngf=slope2
			slope3_ch_Navngf=slope3
			slope4_ch_Navngf=slope4
			ena = 55 
			
			insert ch_Kdrfastngf
			gmax_ch_Kdrfastngf=kdrfdend //.007
			offset5_ch_Kdrfastngf=offset5 
			offset6_ch_Kdrfastngf=offset6 
			slope6_ch_Kdrfastngf=slope6 
			slope5_ch_Kdrfastngf=slope5	
			}
		}
	}	

	forsec dendrite_list {
		insert ch_leak
		gmax_ch_leak = gleak
	}
}

proc set_chanparams() {
	forsec all {
		Ra=myRa
		ek=-90 
		eca=130
		e_ch_leak =-60
		cao_iconc_CaZ=2
	}
}



endtemplate ngfcell